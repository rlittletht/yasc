//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.288
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.0.3705.288.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;


/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="CalendarSoap", Namespace="http://www.thetasoft.com/calendar")]
public class Calendar : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    /// <remarks/>
    public Calendar() {
        this.Url = "http://www.thetasoft.com/calendar/cal.asmx";
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.thetasoft.com/calendar/QueryCalendar", RequestNamespace="http://www.thetasoft.com/calendar", ResponseNamespace="http://www.thetasoft.com/calendar", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode QueryCalendar(string sEventID, string sName, string sStart, string sEnd, string sDescription, string sOwner, string sResourcesQuery) {
        object[] results = this.Invoke("QueryCalendar", new object[] {
                    sEventID,
                    sName,
                    sStart,
                    sEnd,
                    sDescription,
                    sOwner,
                    sResourcesQuery});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginQueryCalendar(string sEventID, string sName, string sStart, string sEnd, string sDescription, string sOwner, string sResourcesQuery, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("QueryCalendar", new object[] {
                    sEventID,
                    sName,
                    sStart,
                    sEnd,
                    sDescription,
                    sOwner,
                    sResourcesQuery}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndQueryCalendar(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.thetasoft.com/calendar/CreateCalendarEvent", RequestNamespace="http://www.thetasoft.com/calendar", ResponseNamespace="http://www.thetasoft.com/calendar", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode CreateCalendarEvent(string sName, string sStart, string sEnd, string sDescription, string sOwner, int nPrivateLevel, string sResources) {
        object[] results = this.Invoke("CreateCalendarEvent", new object[] {
                    sName,
                    sStart,
                    sEnd,
                    sDescription,
                    sOwner,
                    nPrivateLevel,
                    sResources});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateCalendarEvent(string sName, string sStart, string sEnd, string sDescription, string sOwner, int nPrivateLevel, string sResources, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateCalendarEvent", new object[] {
                    sName,
                    sStart,
                    sEnd,
                    sDescription,
                    sOwner,
                    nPrivateLevel,
                    sResources}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndCreateCalendarEvent(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.thetasoft.com/calendar/ModifyCalendarEvent", RequestNamespace="http://www.thetasoft.com/calendar", ResponseNamespace="http://www.thetasoft.com/calendar", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode ModifyCalendarEvent(string sID, string sName, string sStart, string sEnd, string sDescription, string sOwner, int nPrivateLevel, string sResources) {
        object[] results = this.Invoke("ModifyCalendarEvent", new object[] {
                    sID,
                    sName,
                    sStart,
                    sEnd,
                    sDescription,
                    sOwner,
                    nPrivateLevel,
                    sResources});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginModifyCalendarEvent(string sID, string sName, string sStart, string sEnd, string sDescription, string sOwner, int nPrivateLevel, string sResources, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ModifyCalendarEvent", new object[] {
                    sID,
                    sName,
                    sStart,
                    sEnd,
                    sDescription,
                    sOwner,
                    nPrivateLevel,
                    sResources}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndModifyCalendarEvent(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.thetasoft.com/calendar/DeleteCalendarEvent", RequestNamespace="http://www.thetasoft.com/calendar", ResponseNamespace="http://www.thetasoft.com/calendar", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode DeleteCalendarEvent(string sID) {
        object[] results = this.Invoke("DeleteCalendarEvent", new object[] {
                    sID});
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteCalendarEvent(string sID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteCalendarEvent", new object[] {
                    sID}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndDeleteCalendarEvent(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.thetasoft.com/calendar/GetOwnerList", RequestNamespace="http://www.thetasoft.com/calendar", ResponseNamespace="http://www.thetasoft.com/calendar", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlNode GetOwnerList() {
        object[] results = this.Invoke("GetOwnerList", new object[0]);
        return ((System.Xml.XmlNode)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetOwnerList(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetOwnerList", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlNode EndGetOwnerList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlNode)(results[0]));
    }
}
